Name: FindRoot - numerically find a root in an interval
  Synopsis: proc double1 double2 double3 FindRoot -> double
  Description:
     Numerically searches for a root of a function
     specified by proc in the interval [double1, double2].
     The search stops when the absolute value of proc
     is less or equal double3.
  Parameters:
  Examples:
    cout 15 setprecision                   % for display only
    {dup mul 2 sub} -3.0 7.0 0.00000000001 FindRoot
  Bugs:
   - should raise error when there is no sign reversal
   - tracing should be optional
   - specification of precision should be optional
  Author: Diesmann, Hehl
  FirstVersion: 29.7.1999
  Remarks:
   FindRoot currenly supports only a single method for
   root finding: the "bisection method" (see [2]). The
   Mathematica implementation uses different methods (see [1]).
  SeeAlso:
  References:
   [1] The Mathematica Book "FindRoot"
   [2] Numerical Recipes in C. 2nd ed. sec. 9.1
       "Bracketing and Bisection"
 Source: /home/ubuntu/nest_server_codes/nest-2.8.0/lib/sli/mathematica.sli
